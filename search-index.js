var searchIndex={};
searchIndex["tar"] = {"doc":"A library for reading and writing TAR archives","i":[[3,"Archive","tar","A top-level representation of an archive file.",null,null],[3,"Entries","","An iterator over the entries of an archive.",null,null],[3,"Builder","","A structure for building archives",null,null],[3,"Entry","","A read-only view into an entry of an archive.",null,null],[3,"GnuExtSparseHeader","","Representation of the entry found to represent extended…",null,null],[12,"sparse","","",0,null],[12,"isextended","","",0,null],[12,"padding","","",0,null],[3,"GnuHeader","","Representation of the header of an entry in an archive",null,null],[12,"name","","",1,null],[12,"mode","","",1,null],[12,"uid","","",1,null],[12,"gid","","",1,null],[12,"size","","",1,null],[12,"mtime","","",1,null],[12,"cksum","","",1,null],[12,"typeflag","","",1,null],[12,"linkname","","",1,null],[12,"magic","","",1,null],[12,"version","","",1,null],[12,"uname","","",1,null],[12,"gname","","",1,null],[12,"dev_major","","",1,null],[12,"dev_minor","","",1,null],[12,"atime","","",1,null],[12,"ctime","","",1,null],[12,"offset","","",1,null],[12,"longnames","","",1,null],[12,"unused","","",1,null],[12,"sparse","","",1,null],[12,"isextended","","",1,null],[12,"realsize","","",1,null],[12,"pad","","",1,null],[3,"GnuSparseHeader","","Description of the header of a spare entry.",null,null],[12,"offset","","",2,null],[12,"numbytes","","",2,null],[3,"Header","","Representation of the header of an entry in an archive",null,null],[3,"OldHeader","","Representation of the header of an entry in an archive",null,null],[12,"name","","",3,null],[12,"mode","","",3,null],[12,"uid","","",3,null],[12,"gid","","",3,null],[12,"size","","",3,null],[12,"mtime","","",3,null],[12,"cksum","","",3,null],[12,"linkflag","","",3,null],[12,"linkname","","",3,null],[12,"pad","","",3,null],[3,"UstarHeader","","Representation of the header of an entry in an archive",null,null],[12,"name","","",4,null],[12,"mode","","",4,null],[12,"uid","","",4,null],[12,"gid","","",4,null],[12,"size","","",4,null],[12,"mtime","","",4,null],[12,"cksum","","",4,null],[12,"typeflag","","",4,null],[12,"linkname","","",4,null],[12,"magic","","",4,null],[12,"version","","",4,null],[12,"uname","","",4,null],[12,"gname","","",4,null],[12,"dev_major","","",4,null],[12,"dev_minor","","",4,null],[12,"prefix","","",4,null],[12,"pad","","",4,null],[3,"PaxExtension","","A key/value pair corresponding to a pax extension.",null,null],[3,"PaxExtensions","","An iterator over the pax extensions in an archive entry.",null,null],[4,"Unpacked","","When unpacking items the unpacked thing is returned to…",null,null],[13,"File","","A file was unpacked.",5,null],[4,"EntryType","","Indicate for the type of file described by a header.",null,null],[13,"Regular","","Regular file",6,null],[13,"Link","","Hard link",6,null],[13,"Symlink","","Symbolic link",6,null],[13,"Char","","Character device",6,null],[13,"Block","","Block device",6,null],[13,"Directory","","Directory",6,null],[13,"Fifo","","Named pipe (fifo)",6,null],[13,"Continuous","","Implementation-defined 'high-performance' type, treated as…",6,null],[13,"GNULongName","","GNU extension - long file name",6,null],[13,"GNULongLink","","GNU extension - long link name (link target)",6,null],[13,"GNUSparse","","GNU extension - sparse file",6,null],[13,"XGlobalHeader","","Global extended header",6,null],[13,"XHeader","","Extended Header",6,null],[4,"HeaderMode","","Declares the information that should be included when…",null,null],[13,"Complete","","All supported metadata, including mod/access times and…",7,null],[13,"Deterministic","","Only metadata that is directly relevant to the identity of…",7,null],[11,"new","","Create a new archive with the underlying object as the…",8,[[["r"]],["archive"]]],[11,"into_inner","","Unwrap this archive, returning the underlying object.",8,[[],["r"]]],[11,"entries","","Construct an iterator over the entries in this archive.",8,[[["self"]],[["result",["entries"]],["entries"]]]],[11,"unpack","","Unpacks the contents tarball into the specified `dst`.",8,[[["path"],["self"],["asref",["path"]]],["result"]]],[11,"set_unpack_xattrs","","Indicate whether extended file attributes (xattrs on Unix)…",8,[[["self"],["bool"]]]],[11,"set_preserve_permissions","","Indicate whether extended permissions (like suid on Unix)…",8,[[["self"],["bool"]]]],[11,"set_preserve_mtime","","Indicate whether access time information is preserved when…",8,[[["self"],["bool"]]]],[11,"set_ignore_zeros","","Ignore zeroed headers, which would otherwise indicate to…",8,[[["self"],["bool"]]]],[11,"raw","","Indicates whether this iterator will return raw entries or…",9,[[["bool"]],["entries"]]],[11,"new","","Create a new archive builder with the underlying object as…",10,[[["w"]],["builder"]]],[11,"mode","","Changes the HeaderMode that will be used when reading fs…",10,[[["self"],["headermode"]]]],[11,"follow_symlinks","","Follow symlinks, archiving the contents of the file they…",10,[[["self"],["bool"]]]],[11,"get_ref","","Gets shared reference to the underlying object.",10,[[["self"]],["w"]]],[11,"get_mut","","Gets mutable reference to the underlying object.",10,[[["self"]],["w"]]],[11,"into_inner","","Unwrap this archive, returning the underlying object.",10,[[],["result"]]],[11,"append","","Adds a new entry to this archive.",10,[[["self"],["header"],["read"]],["result"]]],[11,"append_data","","Adds a new entry to this archive with the specified path.",10,[[["asref",["path"]],["path"],["self"],["read"],["header"]],["result"]]],[11,"append_path","","Adds a file on the local filesystem to this archive.",10,[[["path"],["self"],["asref",["path"]]],["result"]]],[11,"append_path_with_name","","Adds a file on the local filesystem to this archive under…",10,[[["path"],["asref",["path"]],["self"]],["result"]]],[11,"append_file","","Adds a file to this archive with the given path as the…",10,[[["file"],["path"],["asref",["path"]],["self"]],["result"]]],[11,"append_dir","","Adds a directory to this archive with the given path as…",10,[[["self"],["q"],["p"]],["result"]]],[11,"append_dir_all","","Adds a directory and all of its contents (recursively) to…",10,[[["self"],["q"],["p"]],["result"]]],[11,"finish","","Finish writing this archive, emitting the termination…",10,[[["self"]],["result"]]],[11,"path","","Returns the path name for this entry.",11,[[["self"]],[["cow",["path"]],["result",["cow"]]]]],[11,"path_bytes","","Returns the raw bytes listed for this entry.",11,[[["self"]],["cow"]]],[11,"link_name","","Returns the link name for this entry, if any is found.",11,[[["self"]],[["option",["cow"]],["result",["option"]]]]],[11,"link_name_bytes","","Returns the link name for this entry, in bytes, if listed.",11,[[["self"]],[["option",["cow"]],["cow"]]]],[11,"pax_extensions","","Returns an iterator over the pax extensions contained in…",11,[[["self"]],[["option",["paxextensions"]],["result",["option"]]]]],[11,"header","","Returns access to the header of this entry in the archive.",11,[[["self"]],["header"]]],[11,"raw_header_position","","Returns the starting position, in bytes, of the header of…",11,[[["self"]],["u64"]]],[11,"raw_file_position","","Returns the starting position, in bytes, of the file of…",11,[[["self"]],["u64"]]],[11,"unpack","","Writes this file to the specified location.",11,[[["path"],["self"],["asref",["path"]]],[["result",["unpacked"]],["unpacked"]]]],[11,"unpack_in","","Extracts this file under the specified path, avoiding…",11,[[["path"],["self"],["asref",["path"]]],[["result",["bool"]],["bool"]]]],[11,"set_unpack_xattrs","","Indicate whether extended file attributes (xattrs on Unix)…",11,[[["self"],["bool"]]]],[11,"set_preserve_permissions","","Indicate whether extended permissions (like suid on Unix)…",11,[[["self"],["bool"]]]],[11,"set_preserve_mtime","","Indicate whether access time information is preserved when…",11,[[["self"],["bool"]]]],[11,"new","","Creates a new entry type from a raw byte.",6,[[["u8"]],["entrytype"]]],[11,"as_byte","","Returns the raw underlying byte that this entry type…",6,[[["self"]],["u8"]]],[11,"file","","Creates a new entry type representing a regular file.",6,[[],["entrytype"]]],[11,"hard_link","","Creates a new entry type representing a hard link.",6,[[],["entrytype"]]],[11,"symlink","","Creates a new entry type representing a symlink.",6,[[],["entrytype"]]],[11,"character_special","","Creates a new entry type representing a character special…",6,[[],["entrytype"]]],[11,"block_special","","Creates a new entry type representing a block special…",6,[[],["entrytype"]]],[11,"dir","","Creates a new entry type representing a directory.",6,[[],["entrytype"]]],[11,"fifo","","Creates a new entry type representing a FIFO.",6,[[],["entrytype"]]],[11,"contiguous","","Creates a new entry type representing a contiguous file.",6,[[],["entrytype"]]],[11,"is_file","","Returns whether this type represents a regular file.",6,[[["self"]],["bool"]]],[11,"is_hard_link","","Returns whether this type represents a hard link.",6,[[["self"]],["bool"]]],[11,"is_symlink","","Returns whether this type represents a symlink.",6,[[["self"]],["bool"]]],[11,"is_character_special","","Returns whether this type represents a character special…",6,[[["self"]],["bool"]]],[11,"is_block_special","","Returns whether this type represents a block special device.",6,[[["self"]],["bool"]]],[11,"is_dir","","Returns whether this type represents a directory.",6,[[["self"]],["bool"]]],[11,"is_fifo","","Returns whether this type represents a FIFO.",6,[[["self"]],["bool"]]],[11,"is_contiguous","","Returns whether this type represents a contiguous file.",6,[[["self"]],["bool"]]],[11,"is_gnu_longname","","Returns whether this type represents a GNU long name header.",6,[[["self"]],["bool"]]],[11,"is_gnu_sparse","","Returns whether this type represents a GNU sparse header.",6,[[["self"]],["bool"]]],[11,"is_gnu_longlink","","Returns whether this type represents a GNU long link header.",6,[[["self"]],["bool"]]],[11,"is_pax_global_extensions","","Returns whether this type represents a GNU long name header.",6,[[["self"]],["bool"]]],[11,"is_pax_local_extensions","","Returns whether this type represents a GNU long link header.",6,[[["self"]],["bool"]]],[11,"new_gnu","","Creates a new blank GNU header.",12,[[],["header"]]],[11,"new_ustar","","Creates a new blank UStar header.",12,[[],["header"]]],[11,"new_old","","Creates a new blank old header.",12,[[],["header"]]],[11,"as_old","","View this archive header as a raw \"old\" archive header.",12,[[["self"]],["oldheader"]]],[11,"as_old_mut","","Same as `as_old`, but the mutable version.",12,[[["self"]],["oldheader"]]],[11,"as_ustar","","View this archive header as a raw UStar archive header.",12,[[["self"]],[["option",["ustarheader"]],["ustarheader"]]]],[11,"as_ustar_mut","","Same as `as_ustar_mut`, but the mutable version.",12,[[["self"]],[["option",["ustarheader"]],["ustarheader"]]]],[11,"as_gnu","","View this archive header as a raw GNU archive header.",12,[[["self"]],[["gnuheader"],["option",["gnuheader"]]]]],[11,"as_gnu_mut","","Same as `as_gnu`, but the mutable version.",12,[[["self"]],[["gnuheader"],["option",["gnuheader"]]]]],[11,"from_byte_slice","","Treats the given byte slice as a header.",12,[[],["header"]]],[11,"as_bytes","","Returns a view into this header as a byte array.",12,[[["self"]]]],[11,"as_mut_bytes","","Returns a view into this header as a byte array.",12,[[["self"]]]],[11,"set_metadata","","Blanket sets the metadata in this header from the metadata…",12,[[["self"],["metadata"]]]],[11,"set_metadata_in_mode","","Sets only the metadata relevant to the given HeaderMode in…",12,[[["self"],["metadata"],["headermode"]]]],[11,"entry_size","","Returns the size of entry's data this header represents.",12,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"size","","Returns the file size this header represents.",12,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"set_size","","Encodes the `size` argument into the size field of this…",12,[[["self"],["u64"]]]],[11,"path","","Returns the raw path name stored in this header.",12,[[["self"]],[["cow",["path"]],["result",["cow"]]]]],[11,"path_bytes","","Returns the pathname stored in this header as a byte array.",12,[[["self"]],["cow"]]],[11,"set_path","","Sets the path name for this header.",12,[[["path"],["self"],["asref",["path"]]],["result"]]],[11,"link_name","","Returns the link name stored in this header, if any is…",12,[[["self"]],[["option",["cow"]],["result",["option"]]]]],[11,"link_name_bytes","","Returns the link name stored in this header as a byte…",12,[[["self"]],[["option",["cow"]],["cow"]]]],[11,"set_link_name","","Sets the link name for this header.",12,[[["path"],["self"],["asref",["path"]]],["result"]]],[11,"mode","","Returns the mode bits for this file",12,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_mode","","Encodes the `mode` provided into this header.",12,[[["self"],["u32"]]]],[11,"uid","","Returns the value of the owner's user ID field",12,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"set_uid","","Encodes the `uid` provided into this header.",12,[[["self"],["u64"]]]],[11,"gid","","Returns the value of the group's user ID field",12,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"set_gid","","Encodes the `gid` provided into this header.",12,[[["self"],["u64"]]]],[11,"mtime","","Returns the last modification time in Unix time format",12,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"set_mtime","","Encodes the `mtime` provided into this header.",12,[[["self"],["u64"]]]],[11,"username","","Return the user name of the owner of this file.",12,[[["self"]],[["result",["option","utf8error"]],["utf8error"],["option",["str"]]]]],[11,"username_bytes","","Returns the user name of the owner of this file, if present.",12,[[["self"]],["option"]]],[11,"set_username","","Sets the username inside this header.",12,[[["str"],["self"]],["result"]]],[11,"groupname","","Return the group name of the owner of this file.",12,[[["self"]],[["result",["option","utf8error"]],["utf8error"],["option",["str"]]]]],[11,"groupname_bytes","","Returns the group name of the owner of this file, if…",12,[[["self"]],["option"]]],[11,"set_groupname","","Sets the group name inside this header.",12,[[["str"],["self"]],["result"]]],[11,"device_major","","Returns the device major number, if present.",12,[[["self"]],[["result",["option"]],["option",["u32"]]]]],[11,"set_device_major","","Encodes the value `major` into the dev_major field of this…",12,[[["self"],["u32"]],["result"]]],[11,"device_minor","","Returns the device minor number, if present.",12,[[["self"]],[["result",["option"]],["option",["u32"]]]]],[11,"set_device_minor","","Encodes the value `minor` into the dev_minor field of this…",12,[[["self"],["u32"]],["result"]]],[11,"entry_type","","Returns the type of file described by this header.",12,[[["self"]],["entrytype"]]],[11,"set_entry_type","","Sets the type of file that will be described by this header.",12,[[["self"],["entrytype"]]]],[11,"cksum","","Returns the checksum field of this header.",12,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_cksum","","Sets the checksum field of this header based on the…",12,[[["self"]]]],[11,"as_header","","Views this as a normal `Header`",3,[[["self"]],["header"]]],[11,"as_header_mut","","Views this as a normal `Header`",3,[[["self"]],["header"]]],[11,"path_bytes","","See `Header::path_bytes`",4,[[["self"]],["cow"]]],[11,"set_path","","See `Header::set_path`",4,[[["path"],["self"],["asref",["path"]]],["result"]]],[11,"username_bytes","","See `Header::username_bytes`",4,[[["self"]]]],[11,"set_username","","See `Header::set_username`",4,[[["str"],["self"]],["result"]]],[11,"groupname_bytes","","See `Header::groupname_bytes`",4,[[["self"]]]],[11,"set_groupname","","See `Header::set_groupname`",4,[[["str"],["self"]],["result"]]],[11,"device_major","","See `Header::device_major`",4,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_device_major","","See `Header::set_device_major`",4,[[["self"],["u32"]]]],[11,"device_minor","","See `Header::device_minor`",4,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_device_minor","","See `Header::set_device_minor`",4,[[["self"],["u32"]]]],[11,"as_header","","Views this as a normal `Header`",4,[[["self"]],["header"]]],[11,"as_header_mut","","Views this as a normal `Header`",4,[[["self"]],["header"]]],[11,"username_bytes","","See `Header::username_bytes`",1,[[["self"]]]],[11,"set_username","","See `Header::set_username`",1,[[["str"],["self"]],["result"]]],[11,"groupname_bytes","","See `Header::groupname_bytes`",1,[[["self"]]]],[11,"set_groupname","","See `Header::set_groupname`",1,[[["str"],["self"]],["result"]]],[11,"device_major","","See `Header::device_major`",1,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_device_major","","See `Header::set_device_major`",1,[[["self"],["u32"]]]],[11,"device_minor","","See `Header::device_minor`",1,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_device_minor","","See `Header::set_device_minor`",1,[[["self"],["u32"]]]],[11,"atime","","Returns the last modification time in Unix time format",1,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"set_atime","","Encodes the `atime` provided into this header.",1,[[["self"],["u64"]]]],[11,"ctime","","Returns the last modification time in Unix time format",1,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"set_ctime","","Encodes the `ctime` provided into this header.",1,[[["self"],["u64"]]]],[11,"real_size","","Returns the \"real size\" of the file this header represents.",1,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"is_extended","","Indicates whether this header will be followed by…",1,[[["self"]],["bool"]]],[11,"as_header","","Views this as a normal `Header`",1,[[["self"]],["header"]]],[11,"as_header_mut","","Views this as a normal `Header`",1,[[["self"]],["header"]]],[11,"is_empty","","Returns true if block is empty",2,[[["self"]],["bool"]]],[11,"offset","","Offset of the block from the start of the file",2,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"length","","Length of the block",2,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"new","","Crates a new zero'd out sparse header entry.",0,[[],["gnuextsparseheader"]]],[11,"as_bytes","","Returns a view into this header as a byte array.",0,[[["self"]]]],[11,"as_mut_bytes","","Returns a view into this header as a byte array.",0,[[["self"]]]],[11,"sparse","","Returns a slice of the underlying sparse headers.",0,[[["self"]]]],[11,"is_extended","","Indicates if another sparse header should be following…",0,[[["self"]],["bool"]]],[11,"key","","Returns the key for this key/value pair parsed as a string.",13,[[["self"]],[["utf8error"],["str"],["result",["str","utf8error"]]]]],[11,"key_bytes","","Returns the underlying raw bytes for the key of this…",13,[[["self"]]]],[11,"value","","Returns the value for this key/value pair parsed as a…",13,[[["self"]],[["utf8error"],["str"],["result",["str","utf8error"]]]]],[11,"value_bytes","","Returns the underlying raw bytes for this value of this…",13,[[["self"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"drop","","",10,[[["self"]]]],[11,"next","","",9,[[["self"]],[["result",["entry"]],["option",["result"]]]]],[11,"next","","",14,[[["self"]],[["result",["paxextension"]],["option",["result"]]]]],[11,"clone","","",6,[[["self"]],["entrytype"]]],[11,"clone","","",7,[[["self"]],["headermode"]]],[11,"clone","","",12,[[["self"]],["header"]]],[11,"default","","",0,[[],["self"]]],[11,"eq","","",6,[[["entrytype"],["self"]],["bool"]]],[11,"ne","","",6,[[["entrytype"],["self"]],["bool"]]],[11,"eq","","",7,[[["self"],["headermode"]],["bool"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"read","","",11,[[["self"]],[["result",["usize"]],["usize"]]]]],"p":[[3,"GnuExtSparseHeader"],[3,"GnuHeader"],[3,"GnuSparseHeader"],[3,"OldHeader"],[3,"UstarHeader"],[4,"Unpacked"],[4,"EntryType"],[4,"HeaderMode"],[3,"Archive"],[3,"Entries"],[3,"Builder"],[3,"Entry"],[3,"Header"],[3,"PaxExtension"],[3,"PaxExtensions"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);